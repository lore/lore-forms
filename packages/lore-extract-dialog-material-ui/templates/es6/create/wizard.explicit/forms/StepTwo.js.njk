import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import _ from 'lodash';
import { result as _result } from 'lore-utils';
import { GenericForm } from 'lore-react-forms';
import { RequestError } from 'lore-react-forms-material-ui';
import { CardTitle, CardText, CardActions, RaisedButton, FlatButton, TextField } from 'material-ui';
import Navigation from '../_common/Navigation';
import Steps from '../_common/Steps';
import validators from '../_utils/validators';

export default createReactClass({
  displayName: 'Step',

  propTypes: {
    data: PropTypes.object,
    request: PropTypes.object,
    callbacks: PropTypes.object
  },

  getInitialState: function() {
    const { data } = this.props;

    return {
      data: _.merge({}, data)
    };
  },

  onChange: function(name, value) {
    const nextData = _.merge({}, this.state.data);
    nextData[name] = value;
    this.setState({
      data: nextData
    });
  },

  getValidators: function(data) {
    return {
      lastName: [validators.isRequired]
    };
  },

  render: function() {
    const {
      title = `Create {{ _.capitalize(modelName) }}`,
      description = '',
      callbacks,
      hasError,
      request
    } = this.props;
    const { data } = this.state;
    const validators = this.getValidators(data);

    return (
      <div>
        <CardTitle
          title={title}
          subtitle={description}
        />
        {hasError ? (
          <RequestError request={request}>
            {(request) => {
              return request.error;
            }}
          </RequestError>
        ) : null}
        <Navigation activeStep={Steps.STEP_TWO} />
        <GenericForm
          data={data}
          validators={validators}
          onChange={this.onChange}
          callbacks={callbacks}
        >
          {(form) => {
            return (
              <div>
                <CardText>
                  <TextField
                    floatingLabelText="Last Name"
                    value={form.data.lastName}
                    onChange={(event, value) => {
                      form.onChange('lastName', value)
                    }}
                    hintText="Enter some text..."
                    style={% raw %}{{ width: '100%' }}{% endraw %}
                  />
                </CardText>
                <CardActions style={% raw %}{{ textAlign: 'right' }}{% endraw %}>
                  <FlatButton
                    label="Back"
                    onClick={() => {
                      form.callbacks.onPrevious(form.data);
                    }}
                  />
                  <RaisedButton
                    label="Create"
                    primary={true}
                    disabled={form.hasError}
                    onClick={() => {
                      form.callbacks.onSubmit(form.data);
                    }}
                  />
                </CardActions>
              </div>
            )
          }}
        </GenericForm>
      </div>
    );
  }

});
