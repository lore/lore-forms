import React from 'react';
import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';
import _ from 'lodash';
import { GenericForm } from 'lore-react-forms';

export default createReactClass({
  displayName: 'Optimistic',

  propTypes: {
    model: PropTypes.object.isRequired,
    title: PropTypes.node,
    description: PropTypes.node
  },

  getInitialState: function() {
    const { model } = this.props;

    return {
      data: _.merge({
        firstName: '',
        lastName: ''
      }, model.data)
    };
  },

  request: function(data) {
    const { modelName } = this.props;
    const { model, request } = this.props;
    return request ? request(data) : lore.actions.{{ modelName }}.update(model, data).payload;
  },

  onSubmit: function () {
    const { data } = this.state;
    this.request(data);
    this.onCancel();
  },

  onCancel: function(data) {
    this.props.onCancel(data);
  },

  onChange: function(name, value) {
    const nextData = _.merge({}, this.state.data);
    nextData[name] = value;
    this.setState({
      data: nextData
    });
  },

  getValidators: function(data) {
    return {
      // firstName: [validators.isRequired]
    };
  },

  render: function() {
    const {
      title = `Update {{ _.capitalize(modelName) }}`,
      description = 'This is a description of the form'
    } = this.props;
    const { data } = this.state;
    const validators = this.getValidators(data);

    return (
      <div className="modal-dialog">
        <div className="modal-content">
          <div className="modal-header">
            <button type="button" className="close" onClick={this.onCancel}>
              <span>&times;</span>
            </button>
            {title ? (
              <h4 className="modal-title">
                {title}
              </h4>
            ) : null}
            {description ? (
              <p className="help-block">
                {description}
              </p>
            ) : null}
          </div>
          <GenericForm
            data={data}
            validators={validators}
            onChange={this.onChange}
            callbacks={% raw %}{{
              onSubmit: this.onSubmit,
              onCancel: this.onCancel
            }}{% endraw %}
          >
            {(form) => {
              return (
                <div>
                  <div className="modal-body">
                    <div className="row">
                      <div className="col-md-6">
                        <div className="form-group">
                          <label>First Name</label>
                          <input
                            type="text"
                            className="form-control"
                            value={form.data.firstName}
                            placeholder="Enter some text..."
                            onChange={(event) => {
                              form.onChange('firstName', event.target.value)
                            }}
                          />
                          <span className="help-block">
                            Enter your first name.
                          </span>
                        </div>
                      </div>
                      <div className="col-md-6">
                        <div className="form-group">
                          <label>Last Name</label>
                          <input
                            type="text"
                            className="form-control"
                            value={form.data.lastName}
                            placeholder="Enter some text..."
                            onChange={(event) => {
                              form.onChange('lastName', event.target.value)
                            }}
                          />
                          <span className="help-block">
                            Enter your last name.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="modal-footer">
                    <div className="row">
                      <div className="col-md-12">
                        <button
                          type="button"
                          className="btn btn-default"
                          onClick={() => {
                            form.callbacks.onCancel(form.data);
                          }}
                        >
                          Cancel
                        </button>
                        <button
                          type="button"
                          className="btn btn-primary"
                          disabled={form.hasError}
                          onClick={() => {
                            form.callbacks.onSubmit(form.data);
                          }}
                        >
                          Update
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              )
            }}
          </GenericForm>
        </div>
      </div>
    );
  }

});
